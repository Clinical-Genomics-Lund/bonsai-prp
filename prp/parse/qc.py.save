"""Parse output of QC tools."""
import os
import csv
import logging
import subprocess
import pandas as pd

from typing import Any, Dict
from click.types import File

from ..models.qc import PostAlignQcResult, QcMethodIndex, QcSoftware, QuastQcResult

LOG = logging.getLogger(__name__)

class QC:
    """Class for retrieving qc results"""
    def __init__(self, sample_id, bam, reference, cpus, bed: str = None, baits: str = None):
        self.results = {}
        self.bam = bam
        self.bed = bed
        self.sample_id = sample_id
        self.cpus = cpus
        self.baits = baits
        self.reference = reference
        self.paired = self.is_paired()

    def write_json_result(self, json_result, output_filepath):
        """Write out json file"""
        with open(output_filepath, 'w', encoding="utf-8") as json_file:
            json_file.write(json_result)

    def convert2intervals(self, bed_baits, dict_file):
        """Convert files to interval lists"""
        bed2int_cmd = ["java", "-jar", "/usr/bin/picard.jar", "BedToIntervalList", "-I", bed_baits, "-O", f"{bed_baits}.interval_list", "-SD", dict_file]
        self.system_p(bed2int_cmd)

    def parse_hsmetrics(self, hsmetrics):
        """Parse hs metrics"""